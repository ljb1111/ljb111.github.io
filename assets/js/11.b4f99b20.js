(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{546:function(t,e,a){"use strict";a.r(e);var l=a(12),r=Object(l.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/mO4ABiQGkgY8jx7.png",alt:"image-20210817213336299"}})]),t._v(" "),a("h3",{attrs:{id:"什么是flex布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是flex布局"}},[t._v("#")]),t._v(" 什么是flex布局")]),t._v(" "),a("p",[t._v('flex是flexible Box的缩写，意为"弹性布局"，用来为盒状模型提供最大的灵活性，任何一个容器都可以指定为flex布局。')]),t._v(" "),a("ul",[a("li",[t._v("当我们为父盒子设为flex布局以后，子元素的float、clear和vertical-align属性将失效。")]),t._v(" "),a("li",[t._v("伸缩布局=弹性布局=伸缩盒布局=弹性盒布局=flex布局")])]),t._v(" "),a("h3",{attrs:{id:"布局原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布局原理"}},[t._v("#")]),t._v(" 布局原理")]),t._v(" "),a("p",[t._v("就是通过给父盒子添加flex属性，来控制子盒子的位置和排列方式")]),t._v(" "),a("p",[t._v("采用Flex布局的元素，称为Flex"),a("strong",[t._v("容器")]),t._v('( flex container )，简称"容器"。它的所有子元素自动成为容器成员，称为Flex'),a("strong",[t._v("项目")]),t._v('( flex item)，简称"项目"。')]),t._v(" "),a("h5",{attrs:{id:"flex布局父项容器常见属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex布局父项容器常见属性"}},[t._v("#")]),t._v(" flex布局父项容器常见属性")]),t._v(" "),a("ul",[a("li",[t._v("flex-direction:设置主轴的方向")]),t._v(" "),a("li",[t._v("justify-content:设置主轴上的子元素排列方式")]),t._v(" "),a("li",[t._v("flex-wrap∶设置子元素是否换行")]),t._v(" "),a("li",[t._v("align-content :设置侧轴上的子元素的排列方式(多行)")]),t._v(" "),a("li",[t._v("align-items :设置侧轴上的子元素排列方式(单行)")]),t._v(" "),a("li",[t._v("flex-flow :复合属性，相当于同时设置了flex-direction和flex-wrap")])]),t._v(" "),a("p",[a("strong",[t._v("在flex布局中，是分为主轴和侧轴两个方向，同样的叫法有:行和列、x轴和y轴")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/5kpRPx9Chm2qVgM.png",alt:"image-20210817215105082"}})]),t._v(" "),a("h3",{attrs:{id:"flex-direction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-direction"}},[t._v("#")]),t._v(" flex-direction")]),t._v(" "),a("h4",{attrs:{id:"主轴"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主轴"}},[t._v("#")]),t._v(" 主轴")]),t._v(" "),a("p",[t._v("主轴由 "),a("code",[t._v("flex-direction")]),t._v(" 定义，可以取4个值：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("row")])]),t._v(" "),a("li",[a("code",[t._v("row-reverse")])]),t._v(" "),a("li",[a("code",[t._v("column")])]),t._v(" "),a("li",[a("code",[t._v("column-reverse")])])]),t._v(" "),a("p",[t._v("如果你选择了 "),a("code",[t._v("row")]),t._v(" 或者 "),a("code",[t._v("row-reverse")]),t._v("，你的主轴将沿着 "),a("strong",[t._v("inline")]),t._v(" 方向延伸。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/TWuylrStmRpvb72.png",alt:"image-20210817215747071"}})]),t._v(" "),a("p",[t._v("选择 "),a("code",[t._v("column")]),t._v(" 或者 "),a("code",[t._v("column-reverse")]),t._v(" 时，你的主轴会沿着上下方向延伸 — 也就是 "),a("strong",[t._v("block 排列的方向。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/cKkf1sLl7rX4AdZ.png",alt:"image-20210817215807417"}})]),t._v(" "),a("h4",{attrs:{id:"侧轴"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#侧轴"}},[t._v("#")]),t._v(" 侧轴")]),t._v(" "),a("p",[t._v("侧轴垂直于主轴，所以如果你的"),a("code",[t._v("flex-direction")]),t._v(" (主轴) 设成了 "),a("code",[t._v("row")]),t._v(" 或者 "),a("code",[t._v("row-reverse")]),t._v(" 的话，侧轴的方向就是沿着列向下的。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/HeFoCGsk17PQjmT.png",alt:"image-20210817220057232"}})]),t._v(" "),a("p",[t._v("如果主轴方向设成了 "),a("code",[t._v("column")]),t._v(" 或者 "),a("code",[t._v("column-reverse")]),t._v("，交叉轴就是水平方向。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/qM73w9r4PQ81k2u.png",alt:"image-20210817220107812"}})]),t._v(" "),a("h3",{attrs:{id:"justify-content"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#justify-content"}},[t._v("#")]),t._v(" justify-content")]),t._v(" "),a("p",[t._v("justify-content属性用来使元素在主轴方向上对齐，主轴方向是通过 flex-direction 设置的方向。初始值是flex-start，元素从容器的起始线排列。但是你也可以把值设置为flex-end，从终止线开始排列，或者center，在中间排。你也可以把值设置为"),a("code",[t._v("space-between")]),t._v("，把元素排列好之后的剩余空间拿出来，平均分配到元素之间，所以元素之间间隔相等。或者使用"),a("code",[t._v("space-around")]),t._v("，使每个元素的左右空间相等。")]),t._v(" "),a("p",[t._v("在实例中尝试下列"),a("code",[t._v("justify-content")]),t._v("属性的值：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("stretch")])]),t._v(" "),a("li",[a("code",[t._v("flex-start")])]),t._v(" "),a("li",[a("code",[t._v("flex-end")])]),t._v(" "),a("li",[a("code",[t._v("center")])]),t._v(" "),a("li",[a("code",[t._v("space-around")])]),t._v(" "),a("li",[a("code",[t._v("space-between")])])]),t._v(" "),a("h3",{attrs:{id:"flex-start"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-start"}},[t._v("#")]),t._v(" flex-start")]),t._v(" "),a("p",[t._v("元素从容器的起始线排列")]),t._v(" "),a("p",[a("strong",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/HIfVJNrn8QAxmWq.png",alt:"image-20210817220613736"}})])]),t._v(" "),a("h3",{attrs:{id:"flex-end"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-end"}},[t._v("#")]),t._v(" flex-end")]),t._v(" "),a("p",[t._v("从终止线开始排列")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/8Cf2mwcqAgbvKrj.png",alt:"image-20210817220737621"}})]),t._v(" "),a("h3",{attrs:{id:"center"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#center"}},[t._v("#")]),t._v(" center")]),t._v(" "),a("p",[t._v("将项目居中")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/mietUZXTA5HD6z9.png",alt:"image-20210817220712264"}})]),t._v(" "),a("h3",{attrs:{id:"space-around"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#space-around"}},[t._v("#")]),t._v(" space-around")]),t._v(" "),a("p",[t._v("使每个元素的左右空间相等")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/qC7bVgHN6xkdjEv.png",alt:"image-20210817220839589"}})]),t._v(" "),a("h3",{attrs:{id:"space-between"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#space-between"}},[t._v("#")]),t._v(" space-between")]),t._v(" "),a("p",[t._v("将剩余空间平均分配到元素之间，所以元素之间间隔相等")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/AiVrDyThwRl3tQu.png",alt:"image-20210817221157720"}})]),t._v(" "),a("h3",{attrs:{id:"flex-wrap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-wrap"}},[t._v("#")]),t._v(" flex-wrap")]),t._v(" "),a("p",[t._v("flex布局的元素默认是不换行的")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/pNhZSIjkiGwtQaU.png",alt:"image-20210817223605225"}})]),t._v(" "),a("blockquote",[a("p",[t._v("上图父盒子里面有3个子元素，width为200px")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/Phx6AIj4Xpq1HDs.png",alt:"image-20210817223737856"}})]),t._v(" "),a("blockquote",[a("p",[t._v("现在又插入第四个盒子，发现还在一行，但是width变小了")])]),t._v(" "),a("p",[a("strong",[a("code",[t._v("flex-wrap")])]),t._v(" 指定 flex 元素单行显示还是多行显示 。如果允许换行，这个属性允许你控制行的堆叠方向，为了实现多行效果，为属性flex-wrap添加一个属性值wrap，默认值为nowrap。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/qGa8oBXhMbCNUdV.png",alt:"image-20210817224918181"}})]),t._v(" "),a("blockquote",[a("p",[t._v("flex-flow: nowrap 也是默认值这样子元素不换行，会挤压子元素宽度")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/8GBjACOyz4kFPrZ.png",alt:"image-20210817224848815"}})]),t._v(" "),a("blockquote",[a("p",[t._v("flex-flow: wrap 换行")])]),t._v(" "),a("h3",{attrs:{id:"flex-flow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-flow"}},[t._v("#")]),t._v(" flex-flow")]),t._v(" "),a("p",[t._v("可以将两个属性 flex-direction 和 flex-wrap 组合为简写属性 flex-flow。第一个指定的值为 flex-direction ，第二个指定的值为 flex-wrap")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/YQnNtRgwm8O3zKI.png",alt:"image-20210817225515162"}})]),t._v(" "),a("h3",{attrs:{id:"align-items"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#align-items"}},[t._v("#")]),t._v(" align-items")]),t._v(" "),a("p",[t._v("align-items 属性可以使元素在交叉轴方向对齐。 对行来说，定义的是元素的上下对齐方式； 对列来说，是定义元素的左右对齐方式。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("flex-start")]),t._v("    从flex容器起始位置开始对齐项目")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/iGdY3CZxVwuvgHb.png",alt:"image-20210818104757566"}})]),t._v(" "),a("ul",[a("li",[a("code",[t._v("flex-end")]),t._v("   从flex容器终止位置开始对齐")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/idhJyWHkA9UcoVt.png",alt:"image-20210818104830521"}})]),t._v(" "),a("ul",[a("li",[a("code",[t._v("center")]),t._v("  将项目居中放在容器中")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/7r2RsIeNZ5CJA8T.png",alt:"image-20210818105006215"}})]),t._v(" "),a("ul",[a("li",[a("code",[t._v("stretch")]),t._v("  拉伸项目，填满容器交叉轴方向")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/GeJRnVSNj4hiEQO.png",alt:"image-20210818105135992"}})]),t._v(" "),a("h3",{attrs:{id:"flex-grow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-grow"}},[t._v("#")]),t._v(" flex-grow")]),t._v(" "),a("p",[t._v("flex-grow 属性定义 flex 子元素的增长系数，它决定了容器中剩余的空间应该怎么去分配给项目。")]),t._v(" "),a("ul",[a("li",[t._v("如果容器内部其它项目指定了大小，那么flex-grow将会分配剩余的空间")])]),t._v(" "),a("img",{staticStyle:{zoom:"25%"},attrs:{src:"https://i.loli.net/2021/11/22/qxm1tdisKDFMZVr.png",alt:"image-20210818112858013"}}),t._v(" "),a("ul",[a("li",[t._v("如果容器内项目都没有指定大小，那么用flex-grow可以按比例均分容器空间")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/i7IcHmhMlOvEejD.png",alt:"image-20210818113020863"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/FbGqst3xja8f4Qi.png",alt:"image-20210818113102343"}})]),t._v(" "),a("h3",{attrs:{id:"flex-shrink"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-shrink"}},[t._v("#")]),t._v(" flex-shrink")]),t._v(" "),a("p",[t._v("flex-shrink指定了元素的收缩规则，仅在项目总宽度大于容器宽度时生效，收缩的大小依照flex-shrink的值，"),a("strong",[t._v("值越大，收缩程度越大。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/ob6ftM5jcz4yw2T.png",alt:"image-20210818113720507"}})]),t._v(" "),a("h3",{attrs:{id:"flex-basis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-basis"}},[t._v("#")]),t._v(" flex-basis")]),t._v(" "),a("p",[t._v("flex-basis 指定了 flex 元素在主轴方向上的初始大小。如果不使用  box-sizing 改变盒模型的话，那么这个属性就决定了 flex 元素的的尺寸。")]),t._v(" "),a("h3",{attrs:{id:"order"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#order"}},[t._v("#")]),t._v(" order")]),t._v(" "),a("p",[t._v("order属性告诉容器中元素的顺序， 默认情况下，项目排列顺序与源 HTML 文件中顺序相同。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/RBQGjluTaAnXFWK.png",alt:"image-20210818115104385"}})]),t._v(" "),a("blockquote",[a("p",[t._v("默认情况下，flex容器中元素排列顺序按照html文件")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/HYEG9cRpxiuoCFd.png",alt:"image-20210818115339730"}})]),t._v(" "),a("blockquote",[a("p",[t._v("用order修改元素排列顺序")])]),t._v(" "),a("h3",{attrs:{id:"align-self"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#align-self"}},[t._v("#")]),t._v(" align-self")]),t._v(" "),a("p",[t._v("允许某一个元素调整自己的对齐方式，可设置的属性值和align-items一样")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/11/22/BQSI4nYGlWNgDMe.png",alt:"image-20210818115955891"}})])])}),[],!1,null,null,null);e.default=r.exports}}]);